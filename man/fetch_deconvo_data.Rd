% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_deconvo_data.R
\name{fetch_deconvo_data}
\alias{fetch_deconvo_data}
\title{Download Human DLPFC Deconvolution Data}
\usage{
fetch_deconvo_data(
  type = c("rse_gene", "sce", "sce_DLPFC_example"),
  destdir = tempdir(),
  eh = ExperimentHub::ExperimentHub(),
  bfc = BiocFileCache::BiocFileCache()
)
}
\arguments{
\item{type}{A \code{character(1)} specifying which file you want to download.
\itemize{
\item \code{rse_gene}: A \link[SummarizedExperiment:RangedSummarizedExperiment-class]{RangedSummarizedExperiment-class}
with 110 bulk RNA-seq samples x 21k genes. (41 MB)
\item \code{sce}: A \link[SingleCellExperiment:SingleCellExperiment]{SingleCellExperiment}
object with Human DLPFC snRNA-seq data. 77k nuclei x 36k genes (172 MB)
\item \code{sce_DLPFC_example}: An example subset of \code{sec}
\link[SingleCellExperiment:SingleCellExperiment]{SingleCellExperiment}
with 10k nuclei x 557 genes (49 MB)
}}

\item{destdir}{The destination directory to where files will be downloaded
to in case the \code{ExperimentHub} resource is not available. If you already
downloaded the files, you can set this to the current path where the files
were previously downloaded to avoid re-downloading them.}

\item{eh}{An \code{ExperimentHub} object
\link[ExperimentHub:ExperimentHub-class]{ExperimentHub-class}.}

\item{bfc}{A \code{BiocFileCache} object
\link[BiocFileCache:BiocFileCache-class]{BiocFileCache-class}. Used when
\code{eh} is not available.}
}
\value{
The requested object: \code{rse_gene} that you assign to an object
}
\description{
This function downloads from ExperimentHub, if ExperimentHub is not
available, this function will download the files from Dropbox using
BiocFileCache::bfcrpath() unless the files are present already at destdir.
}
\details{
Note that ExperimentHub and BiocFileCache will cache the data and
automatically detect if you have previously downloaded it, thus making it
the preferred way to interact with the data.

Based on spatialLIBD::fetch_data()
}
\examples{
## Download the bulk RNA gene expression data
## A RangedSummarizedExperiment (41.16 MB)

if (!exists("rse-gene")) rse_gene <- fetch_deconvo_data("rse_gene")

## explore data
rse_gene
# class: RangedSummarizedExperiment
# dim: 21745 110
# metadata(1): SPEAQeasy_settings
# assays(2): counts logcounts
# rownames(21745): ENSG00000227232.5 ENSG00000278267.1 ... ENSG00000210195.2 ENSG00000210196.2
# rowData names(11): Length gencodeID ... gencodeTx passExprsCut
# colnames(110): 2107UNHS-0291_Br2720_Mid_Bulk 2107UNHS-0291_Br2720_Mid_Cyto ... AN00000906_Br8667_Mid_Cyto
# AN00000906_Br8667_Mid_Nuc
# colData names(78): SAMPLE_ID Sample ... diagnosis qc_class

## load example snRNA-seq data
## A SingleCellExperiment (4.79 MB)
if (!exists("sce_DLPFC_example")) sce_DLPFC_example <- fetch_deconvo_data("sce_DLPFC_example")


sce_DLPFC_example
# class: SingleCellExperiment
# dim: 557 10000
# metadata(3): Samples cell_type_colors cell_type_colors_broad
# assays(2): counts logcounts
# rownames(557): GABRD PRDM16 ... AFF2 MAMLD1
# rowData names(7): source type ... gene_type binomial_deviance
# colnames(10000): 16_CGAAGTTTCGCACGAC-1 11_TTGGGATCAACCGCTG-1 ... 8_CGCATAAGTTAAACCC-1 16_AGCTACATCCCGAGAC-1
# colData names(32): Sample Barcode ... cellType_layer layer_annotation
# reducedDimNames(0):
#   mainExpName: NULL
# altExpNames(0):

## check the logcounts
SingleCellExperiment::logcounts(sce_DLPFC_example)[1:5, 1:5]

\dontrun{
sce_path_zip <- fetch_deconvo_data("sce")
sce_path <- unzip(sce_path_zip, exdir = tempdir())
sce <- HDF5Array::loadHDF5SummarizedExperiment(
    file.path(tempdir(), "sce_DLPFC_annotated")
)
}
}
